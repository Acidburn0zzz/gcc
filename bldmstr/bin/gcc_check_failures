#!/bin/ksh

function usage {
	cat >&2 <<EOF
Usage: $0 [ -a <archive_dir> ] <gcc_build_dir>
where	<gcc_build_dir> is the root of a gcc/gcc2ir build
and	<archive_dir> is an optional directory where the test logs and 
	failure list are to be archived
For builds done using the build_gcc2ir script, <gcc_build_dir> is \$ROOT/build.gcc2ir
If <archive_dir> is specified, this directory will be created if necessary.
The names of the files created in <archive_dir> will be gcc.failures.<options>,
g++.failures.<options>, gcc.log.<options>, and g++.log.<options>.  
The <options> string will be a concatenation of the options used in the
test run.  The log files will be copies of the logs of the test runs.
The failure files will be sorted lists of failing tests.
EOF
	exit 1
}

ARCHIVEDIR=

while getopts a: optflag
do
	case $optflag in
		a)	ARCHIVEDIR=$OPTARG
			;;
                *)      usage
                        ;;
        esac
done
        
shift `expr $OPTIND - 1`

if [ $# -ne 1 ]
then
	usage
fi

BUILDDIR=$1
TESTSUITEDIR=$BUILDDIR/gcc/testsuite

if [ ! -d $TESTSUITEDIR ]
then
	echo >&2 "$TESTSUITEDIR does not exist"
	exit 2
fi

SUMMARYFILES="`/bin/find $BUILDDIR -name '*.sum'`"
#Ignore such complaining from gcc that desires tree-ssa or rtl based opts.  
grep ^FAIL $SUMMARYFILES | grep -v "dump file does not exist" | sed 's/^[^ ]* //' | sort

if [ ! "" = "$ARCHIVEDIR" ]
then
	mkdir -p $ARCHIVEDIR
	for sumfile in $SUMMARYFILES
	do
		dir=`/bin/dirname $sumfile`
		base=`/bin/basename $sumfile .sum`
		optionstring=$(grep "^Running target " $sumfile \
			| sed 's/^Running target //' \
			| sed 's![ /]!!g')
		cp $dir/$base.log $ARCHIVEDIR/$base.log.$optionstring
		grep ^FAIL $sumfile | sed 's/^[^ ]* //' | sort \
			> $ARCHIVEDIR/$base.failures.$optionstring
	done
fi
