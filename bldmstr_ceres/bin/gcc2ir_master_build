#!/bin/ksh

PATH=/usr/bin:/bin
unset LANG
unset LANGUAGE

# All scripts are run from the same directory as this one.
SCRIPTDIR=$(dirname $0)

# Set common configuration variables
. $SCRIPTDIR/commonconfig
if [ `uname -p` == i386 ]
then
	LANGWSLISTDEFAULT="$LANGWSLISTDEFAULT /ws/gccfss/cross-compiler/ceres-lang"
fi

OS_NAME=`uname -s`
if [ "$OS_NAME" == "Linux" ]
then
	MAKE="/opt/dmake/bin/dmake"
	CPUS=`cat /proc/cpuinfo | grep 'ncpus active' | awk '{print $NF}'`
else
	MAKE="/usr/ccs/bin/make"
        # OS_NAME should either be "Linux" or the SunOS version number (e.g. "5.10")
        OS_NAME=`uname -r`
	CPUS=`/usr/sbin/psrinfo | wc -l`
fi

EXTRALANGWS=
LANGWSLIST="$LANGWSLISTDEFAULT"
INSTALLDIR=
RUNTESTS=1 
if [ `uname -p` == i386 ]
then
    RUNTESTS=0
fi
SUNINSTALL=
TESTOPTION=
INSTALL_BACKEND=1 
NIGHTLY_BUILD_MODE=
SPARC_INSTALL_DIR=
((JOBS=CPUS*2))
if [ $JOBS -gt 50 ]
then
	JOBS=50
fi

function usage {
	cat <<EOF
Usage: $0 [-g <GCC2IR_WS>] [-i <INSTALL_DIR>] [-l <PROJ_LANG_WS>] [-L "<LANG_WS_LIST>"] [-s <EXISTING_SUN_INSTALLATION>] [-p <EXISTING_CROSS_COMPONENTS>] [-t] <build_dir>
where
	<GCC2IR_WS>	is a fully populated gcc2ir source workspace.
			Default: $GCC2IRWS
	<INSTALL_DIR>	is the desired installation directory.
			Default: <build_dir>/install
	<LANG_WS_LIST>	is a list of lang workspace, one of which must be
			fully populated.  This option provides full control over
			which lang workspaces are used.
			Default: $LANGWSLIST
	<PROJ_LANG_WS>	is a lang workspace whose contents are to be brought
			over in addition to those in <LANG_WS_LIST>.
			This is usually a developers private workspace.
			A list of workspaces may be used if enclosed in quotes.
			Default: <none>
	<EXISTING_SUN_INSTALLATON> is a pre-existing Sun or gcc2ir installation.
			It is used to obtain the Sun compiler components,
			rather than building them.  If the -s option is used,
			-l and -L are ignored.
        <EXISTING_CROSS_COMPONENTS> is a pre-existing cross-compiler components installation. 
                        It is only used to obtain libraries and other components needed for sparc during cross compilation. 
	<build_dir>	is the directory to be created under which the build
			will be done
	-t		do not run tests. This option disables testing.
        -I              do not install Sun backend
        -n              Nightly build mode. sol9 build will wait for sol10 to finish
EOF
	exit 1
}

while getopts Ig:i:l:nL:p:s:v:t optflag
do
        case $optflag in
		g)	GCC2IRWS=$OPTARG
			;;
		i)	INSTALLDIR=$OPTARG
			;;
		l)	EXTRALANGWS="$OPTARG"
			;;
		L)	LANGWSLIST="$OPTARG"
			;;
		p)      SPARC_INSTALL_DIR="-p $OPTARG"
			;;
		s)	SUNINSTALL=$OPTARG
			;;
		v)      GCC_VERSION="$OPTARG"
			;;
		t)	RUNTESTS=0
			TESTOPTION="-t $TESTOPTION"
			;;
		I)	INSTALL_BACKEND=0
                        TESTOPTION="-I $TESTOPTION"
                        ;;
                n)      NIGHTLY_BUILD_MODE=1
                        TESTOPTION="-n $TESTOPTION"
                        ;;
                *)      usage
                        ;;
        esac
done
         
shift `expr $OPTIND - 1`
if [ $# -ne 1 ]
then
	usage
fi

BUILDDIR=$1

if [ "$INSTALLDIR" = "" ]
then
	INSTALLDIR=$BUILDDIR/install
fi

if [ "" != "$EXTRALANGWS" ]
then
	LANGWSLIST="$EXTRALANGWS $LANGWSLIST"
fi

if [ $OS_NAME = "Linux" ]
then
	LANGWSLIST="/ws/gccfss/linux/ceres_linux $LANGWSLIST"
fi

cat <<EOF
Build options being used:
	Build directory:	$BUILDDIR
	Install directory:	$INSTALLDIR
	Gcc2ir workspace:	$GCC2IRWS
	Lang workspaces:	$LANGWSLIST
	Existing Sun install:	$SUNINSTALL
	Run tests:		$RUNTESTS

EOF

if [ "" = "$SUNINSTALL" ]
then
	# Build the Sun backend components
	$MAKE -f ${SCRIPTDIR}/../data/Makefile.langbuild -j $JOBS JOBS=$JOBS BUILDDIR=$BUILDDIR LANGWSLIST="$LANGWSLIST" GCC_VERSION="$GCC_VERSION" all

	if [ $? -ne 0 ]
	then
		echo "Build of lang workspace failed."
		exit 1
	fi

	SUNINSTALL="$BUILDDIR/langinstall"
fi

# Build and install gcc2ir
/bin/ksh $SCRIPTDIR/build_gcc2ir $TESTOPTION "-w $GCC2IRWS" -i $INSTALLDIR/$GCCINSTSUBDIR -s $SUNINSTALL $SPARC_INSTALL_DIR -v $GCC_VERSION $BUILDDIR

if [ $? -ne 0 ]
then
	echo Build and install failed.
	echo current_gcc2ir has not been updated.
	exit 1
fi

if [ $RUNTESTS = 1 ]
then

  if [ `uname -r` != 5.11 ]
  then
    # Run gdb testsuite with -m32 option
    /bin/ksh ${SCRIPTDIR}/rungdbtest -c $INSTALLDIR/$GCCINSTSUBDIR/bin -g /ws/gccfss/gnutools/sparc-S2/gdb-6.8/bin/gdb -T /net/clpt-v490-1/export/data1/jfd/opensource/gdb-6.8/gdb/testsuite  -o "-m32" -r $BUILDDIR/gdb_tests > $BUILDDIR/logs/gdbtest_m32.log 2>&1 &
  fi

  wait

  # Compare test results with the golden files
  /bin/ksh ${SCRIPTDIR}/compareTestResults $OS_NAME $BUILDDIR > $BUILDDIR/logs/test.comparison 2>&1

fi

exit 0
