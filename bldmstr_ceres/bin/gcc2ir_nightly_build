#!/bin/ksh

PATH=/bin:/usr/bin

# All scripts are run from the same directory as this one.
SCRIPTDIR=$(dirname $0)

# Set common configuration variables
. $SCRIPTDIR/commonconfig

# See if there were any new failures in the given test comparison file.
# If so, return 1, otherwise, return 0.
function testsHaveFailures {
	typeset resultfile=$1

	if [ ! -e $resultfile ]
	then
		echo >&2 "Test comparision file $resultfile does not exist."
		echo 1
		return
	fi

	grep '^>' $resultfile > /dev/null
	if [ $? -eq 0 ]
	then
		# There were new failures.
		echo 1
	else
		echo 0
	fi
}

# Wait for the named file or directory to exist.
function waitForFile {
	typeset filename=$1

        for try in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 
        do
            if [ ! -e $filename ]
            then
                echo "$filename isn't ready ... try $try"
                # 10 min nap
                sleep 600
            fi
        done
        if [ ! -e $filename ]
        then
            echo "$filename still isn't ready. Probably Solaris 9 build failed"
            exit 1
        fi
}


# OS should either be "Linux" or the SunOS version number (e.g. "5.10")
OS=`uname -s`
if [ $OS = SunOS ]
then
        OS=`uname -p`
        if [ $OS != i386 ]
        then
	    OS=`uname -r`
        fi
fi

XSUFFIX=x

case $OS in
	5.10)	INSTALLAREA=/ws/gccfss/builds/$GCC_VERSION;;
	Linux)	INSTALLAREA=/net/perftech-064/data/compilers;;
        i386)   INSTALLAREA=/ws/gccfss/builds/$GCC_VERSION$XSUFFIX;;
	*)	echo >&2 "Error:  Unknown OS"
		exit 1;;
esac

BUILDAREA=$(${SCRIPTDIR}/getBuildAreaForMachine)
if [ $? -ne 0 ]
then
	exit 1
fi

BUILDNAME=`date +\%Y\%m\%d`_ceres_gcc421
BACKEND_COMP_BUILDNAME=`date +\%Y\%m\%d`_ceres_gcc421
if [ $# -gt 0 ]
then
	BUILDNAME=$1
fi
BUILDDIR=$BUILDAREA/$BUILDNAME
INSTALLDIR=$INSTALLAREA/$BUILDNAME

if [ $OS == i386 ]
then
    # cross compiler still waits for the sparc build to complete
    waitForFile /ws/gccfss/builds/$GCC_VERSION/$BACKEND_COMP_BUILDNAME/$SUNINSTSUBDIR/$GCC_VERSION/prod/lib/gxx_eh_supported
    ${SCRIPTDIR}/gcc2ir_master_build -n -i $INSTALLDIR -p /ws/gccfss/builds/$GCC_VERSION/$BACKEND_COMP_BUILDNAME/$SUNINSTSUBDIR/$GCC_VERSION -v $GCC_VERSION -t $BUILDDIR
else
    # specify -n to tell about Nightly build mode
    ${SCRIPTDIR}/gcc2ir_master_build -n -i $INSTALLDIR -v $GCC_VERSION $BUILDDIR
fi

if [ $? -ne 0 ]
then
	# There was some build failure.
	exit $?
fi

case $OS in
	5.10)	# Check the test results for new failures.
		if [ 1 = `testsHaveFailures $BUILDDIR/logs/test.comparison` ]
		then
			echo "The Solaris 10 build had new test failures."
			echo "Current has not been updated."
			exit 1;
		fi
		# If we get here we know that both Solaris 9 and 10 builds
		# finished and found no new test failures.
		# Update the current link.
		${SCRIPTDIR}/newcurrent gcc421
		;;
	Linux)	# Copy the compiler to common place.
		echo "Copy the compiler to common place /ws/gccfss/builds. " 
		COMMONDIR=/ws/gccfss/builds/4.2.1_linux
		mkdir $COMMONDIR/$BUILDNAME
		(cd $INSTALLDIR; find . | cpio -pdum $COMMONDIR/$BUILDNAME/)

		# Check the test results for new failures.
		if [ 1 = `testsHaveFailures $BUILDDIR/logs/test.comparison` ]
		then
			echo "Sparc/Linux build has new test failures."
			echo "Current has not been updated."
			exit 1;
		else
			# Update the current link.
			${SCRIPTDIR}/newcurrent gcc421
			(cd $COMMONDIR ; rm -f current_gcc421; ln -s $BUILDNAME current_gcc421)
		fi
		;;
	*)	;;
esac

exit 0
